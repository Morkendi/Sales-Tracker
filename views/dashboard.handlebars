{{!-- First section --}}
    <div class="flexflex-row p-8"> 
        <div class="flex flex-col px-6"> 
            <div class="flex flex-row bg-gray-200 shadow-xl py-4 w-full rounded-md" >
                <div class="px-4">
                    <div class="text-lg font-medium text-black"> Month </div> 
                    <div class="text-3xl font-bold text-black"> {{getDate}}</div> 
                </div>
                <div class="px-8">  
                    <div class="text-lg font-medium text-black"> NÂº of Sales </div>
                    <div class="text-3xl font-bold text-black"> {{sales.length}} </div>
                </div>
                <div class="px-8"> 
                    <div class="text-lg font-medium text-black"> Commissions earned </div>
                    <div class="text-3xl font-bold text-black"> ${{ calculateCom sales}} </div>
                </div>
                <div class="px-8"> 
                    <div class="text-lg font-medium text-black">{{loggedUsername}}'s Total Sales</div>
                    <div class="text-3xl font-bold text-black"> ${{ calculateTotalSales sales }} </div>
                </div>
            </div>
        <div class="flex flex-row mt-4">
            <div class="flex flex-col">
                <div class="text-3xl font-bold text-black p-4"> New Sale </div>  
                <div class="bg-gray-400 w-64  shadow-xl rounded-xl flex flex-col">
                    <div class="pl-4" >
                        <label for="user" class="block mb-2 text-lg font-bold text-gray-900 dark:text-white pt-3 ">User</label>
                        <select class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-11/12 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" id = "myList" onchange = "listPicker()" >   
                            {{#each clients as |client|}} 
                            <option data-id="{{id}}"> {{client_name}} </option>  
                            {{/each}} 
                        </select>
                        <label for="client" class="block mb-2 text-lg font-bold text-gray-900 dark:text-white pt-3 ">Client</label>
                        <input type="text" id="client_name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-11/12 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Restaurante Hueso" required>
                    </div>
                    <button class="text-center rounded-md bg-slate-800 text-white my-2 mx-4 py-2" id="newSale">Submit Sale</button>
                </div>
        <div>  
            <div class="text-3xl font-bold text-black p-4"> New Order </div>  
            <div class="bg-gray-400 w-64 h-120 shadow-xl rounded-xl flex flex-col">
                <div class="pl-4" >
                    <label for="product_name" class="block mb-1 text-lg font-bold text-gray-900 dark:text-white pt-3 tp-2">Product</label>
                    <input type="text" id="product" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-11/12 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Pink Oyster Mushroom" required>
                </div>
                <div class="pl-4" >
                    <label for="quantity" class="block mb-2 text-lg font-bold text-gray-900 dark:text-white pt-3 ">Quantity</label>
                    <input type="text" id="quantity" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-11/12 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="5" required>
                </div>
                <div class="pl-4" >
                    <label for="quantity" class="block mb-2 text-lg font-bold text-gray-900 dark:text-white pt-3 ">Sale Order</label>
                        <select class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-11/12 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" id = "mySaleList" onchange = "salePicker()" >   
                                {{#each sales as |sale|}} 
                                <option data-id="{{id}}"> {{id}} </option>  
                                {{/each}} 
                            </select> 
                        <label for="client" class="block mb-2 text-lg font-bold text-gray-900 dark:text-white pt-3 ">Sale Id</label>
                        <input type="text" id="sale_name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-11/12 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" required>
                </div> 
                <button class="text-center rounded-md bg-slate-800 text-white my-2 mx-4 py-2" id="newOrder">Submit order</button>
            </div>
        </div>
    </div>
        {{!-- Sales History Section --}}
        <div class="flex flex-row pl-6"> 
            <div>
                {{#each sales as |sale|}}
                <div class="text-3xl font-bold text-black p-4">Sales History {{id}} </div>
                    <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
                    <table class="text-xs text-gray-700 uppercase bg-gray-50 dark:ng-gray-700 dark:text-gray-400">
                        <thead >
                            <tr>
                                <th scope="col" class="px-6 py-3">Product</th>
                                <th scope="col" class="px-6 py-3">Date</th>
                                <th scope="col" class="px-6 py-3">Qty</th>
                                <th scope="col" class="px-6 py-3">Amount</th>
                                <th scope="col" class="px-6 py-3">Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            
                        {{#each sale.products as |product|}} 

                            
                                <tr class="bg-white border-b dark:bg-gray-900 dark:border-gray-700">
                                <td class="px-6 py-4">{{product.product_name}}</td>
                                <td class="px-6 py-4">{{sale.date_created}}</td>
                                <td class="px-6 py-4">{{product.sale_product.quantity}}</td>
                                <td class="px-6 py-4">{{product.price}}$</td>
                                <td class="px-6 py-4">{{multiply product.sale_product.quantity product.price}}$</td> <!-- Display multiplication of quantity and price -->
                                </tr>
                            
                        {{/each}} 
                        </tbody>
                        </table>
                    </div>
                    {{/each}}
            </div>
        </div>
    </div>

<script>

function listPicker() {  
    let mylist = document.getElementById("myList");  
    document.getElementById("client_name").value = mylist.options[mylist.selectedIndex].getAttribute('data-id'); 
}  

function salePicker() {  
    let mylist = document.getElementById("mySaleList");  
    document.getElementById("sale_name").value = mylist.options[mylist.selectedIndex].getAttribute('data-id'); 
}  



const newSaleHandler = async(event)=>{
    event.preventDefault();

    
    const client_id = document.getElementById('client_name').value.trim();

    if(client_id){
        const response = await fetch('/api/sales/', {
        method: 'POST',
        body: JSON.stringify({client_id}),
        headers: { 'Content-Type': 'application/json' },
    });
    if (response.ok) {
        document.location.reload();
    } else {  
        alert('Failed to submit your sale');
    } }
    };

const newOrderHandler= async (event)=>{
event.preventDefault();

    let product = document.getElementById('product').value.trim();
    let quantity = document.getElementById('quantity').value.trim();
    const sale_id = document.getElementById('sale_name').value.trim();

    let productArr = product.split(',')
    let quantityArr = quantity.split(',')

    let parsedProdArr = [];
    let parsedQuantArr = [];
    let parsedprod;
    let parsedquant;

    for(let i=0; i<productArr.length; i++){
        parsedprod = parseInt(productArr[i])
        parsedquant = parseInt(quantityArr[i])
        parsedProdArr.push(parsedprod)
        parsedQuantArr.push(parsedquant)
    }

    let prod;
    let quant;
    if(product && quantity && sale_id){
        for(let i=0; i<parsedProdArr.length;i++){
        prod= parsedProdArr[i];
        quant = parsedQuantArr[i];
        const response = await fetch('/api/saleProducts/', {
                method: 'POST',
                body: JSON.stringify({ prod, quant, sale_id}),
                headers: { 'Content-Type': 'application/json' },
            });
            if (response.ok) {
                document.location.replace('/dashboard');
            } else {
                alert('Failed to submit your Order');
            }
        }
    }
}
document.getElementById('newSale').addEventListener("click", newSaleHandler)
document.getElementById('newOrder').addEventListener("click", newOrderHandler)

</script>